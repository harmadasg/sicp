#lang sicp
(define (count-pairs lst)
  (let ((count 0)
        (pairs '()))
    (define (mark-pair pair)
      (set! pairs (cons pair pairs))
      (set! count (+ 1 count)))
    (define (subproc lst)
      (cond ((not (pair? lst)) 'done)
            ((memq lst pairs) 'done)
            (else (mark-pair lst)
                  (subproc (car lst))
                  (subproc (cdr lst)))))
    (subproc lst)
    count))